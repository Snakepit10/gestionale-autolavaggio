# Generated by Django 4.2.23 on 2025-07-13 17:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0002_initial'),
        ('ordini', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('clienti', '0002_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Abbonamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codice_accesso', models.CharField(blank=True, max_length=20, unique=True)),
                ('codice_nfc', models.CharField(blank=True, max_length=32, unique=True)),
                ('data_attivazione', models.DateField(auto_now_add=True)),
                ('data_scadenza', models.DateField()),
                ('data_ultimo_accesso', models.DateTimeField(blank=True, null=True)),
                ('stato', models.CharField(choices=[('attivo', 'Attivo'), ('sospeso', 'Sospeso'), ('scaduto', 'Scaduto'), ('annullato', 'Annullato')], default='attivo', max_length=20)),
                ('tessera_stampata', models.BooleanField(default=False)),
                ('numero_tessera', models.CharField(blank=True, max_length=20)),
                ('creato_il', models.DateTimeField(auto_now_add=True)),
                ('aggiornato_il', models.DateTimeField(auto_now=True)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='abbonamenti', to='clienti.cliente')),
            ],
            options={
                'verbose_name_plural': 'Abbonamenti',
                'ordering': ['-data_attivazione'],
            },
        ),
        migrations.CreateModel(
            name='ConfigurazioneAbbonamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titolo', models.CharField(max_length=200)),
                ('descrizione', models.TextField()),
                ('prezzo', models.DecimalField(decimal_places=2, max_digits=10)),
                ('attiva', models.BooleanField(default=True)),
                ('modalita_targa', models.CharField(choices=[('singola', 'Targa Singola'), ('multipla', 'Targhe Multiple'), ('libera', 'Senza Vincoli Targa')], max_length=20)),
                ('numero_massimo_targhe', models.IntegerField(default=1)),
                ('periodicita_reset', models.CharField(choices=[('giornaliero', 'Giornaliero'), ('settimanale', 'Settimanale'), ('mensile', 'Mensile'), ('trimestrale', 'Trimestrale'), ('semestrale', 'Semestrale'), ('annuale', 'Annuale')], max_length=20)),
                ('durata', models.CharField(choices=[('1_mese', '1 Mese'), ('3_mesi', '3 Mesi'), ('6_mesi', '6 Mesi'), ('12_mesi', '12 Mesi')], max_length=20)),
                ('giorni_durata', models.IntegerField(help_text='Durata in giorni')),
                ('rinnovo_automatico', models.BooleanField(default=False)),
                ('giorni_preavviso_scadenza', models.IntegerField(default=7)),
                ('termini_condizioni', models.TextField(blank=True)),
                ('creata_il', models.DateTimeField(auto_now_add=True)),
                ('aggiornata_il', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Configurazioni Abbonamento',
            },
        ),
        migrations.CreateModel(
            name='AccessoAbbonamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_ora', models.DateTimeField(auto_now_add=True)),
                ('targa_utilizzata', models.CharField(blank=True, max_length=10)),
                ('metodo_verifica', models.CharField(choices=[('nfc', 'NFC'), ('qr', 'QR Code'), ('codice', 'Codice Manuale'), ('tessera', 'Tessera Fisica')], max_length=20)),
                ('autorizzato', models.BooleanField(default=False)),
                ('motivo_rifiuto', models.CharField(blank=True, max_length=200)),
                ('abbonamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accessi', to='abbonamenti.abbonamento')),
                ('operatore', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('postazione', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.postazione')),
                ('servizio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.servizioprodotto')),
            ],
            options={
                'verbose_name_plural': 'Accessi Abbonamento',
                'ordering': ['-data_ora'],
            },
        ),
        migrations.AddField(
            model_name='abbonamento',
            name='configurazione',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='abbonamenti.configurazioneabbonamento'),
        ),
        migrations.AddField(
            model_name='abbonamento',
            name='ordine_acquisto',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ordini.ordine'),
        ),
        migrations.CreateModel(
            name='TargaAbbonamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('targa', models.CharField(max_length=10)),
                ('attiva', models.BooleanField(default=True)),
                ('data_aggiunta', models.DateTimeField(auto_now_add=True)),
                ('abbonamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='targhe', to='abbonamenti.abbonamento')),
            ],
            options={
                'verbose_name_plural': 'Targhe Abbonamento',
                'unique_together': {('abbonamento', 'targa')},
            },
        ),
        migrations.CreateModel(
            name='ServizioInclusoAbbonamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantita_inclusa', models.IntegerField(help_text='Numero accessi per periodo')),
                ('configurazione', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='servizi_inclusi', to='abbonamenti.configurazioneabbonamento')),
                ('servizio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.servizioprodotto')),
            ],
            options={
                'verbose_name_plural': 'Servizi Inclusi Abbonamento',
                'unique_together': {('configurazione', 'servizio')},
            },
        ),
        migrations.CreateModel(
            name='ContatoreAccessiAbbonamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('periodo_inizio', models.DateField()),
                ('accessi_effettuati', models.IntegerField(default=0)),
                ('abbonamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contatori', to='abbonamenti.abbonamento')),
                ('servizio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.servizioprodotto')),
            ],
            options={
                'verbose_name_plural': 'Contatori Accessi Abbonamento',
                'unique_together': {('abbonamento', 'servizio', 'periodo_inizio')},
            },
        ),
        migrations.CreateModel(
            name='ConfigurazioneAccessiGiorno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('giorno_settimana', models.IntegerField(choices=[(0, 'Lunedì'), (1, 'Martedì'), (2, 'Mercoledì'), (3, 'Giovedì'), (4, 'Venerdì'), (5, 'Sabato'), (6, 'Domenica')])),
                ('numero_accessi', models.IntegerField(help_text='Numero massimo accessi per questo giorno')),
                ('configurazione', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accessi_giorni', to='abbonamenti.configurazioneabbonamento')),
            ],
            options={
                'verbose_name_plural': 'Configurazioni Accessi per Giorno',
                'unique_together': {('configurazione', 'giorno_settimana')},
            },
        ),
    ]
